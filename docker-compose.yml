version: '3.7'

volumes:
  grafana-data: {}
  mysql-data: {}

services:
  master:
    image: redis:latest
    container_name: master
    volumes:
      - ./master.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    ports:
      - "6379:6379"
      - "6380:6380"
      - "6381:6381"
      - "5000:5000"
      - "5001:5001"
      - "5002:5002"
  redis-1:
    image: redis:latest
    network_mode: "service:master"
    container_name: slave-1
    volumes:
      - ./slave:/slave
    command: redis-server /slave/slave-1.conf

  redis-2:
    network_mode: "service:master"
    image: redis:latest
    container_name: slave-2
    volumes:
      - ./slave:/slave
    command: redis-server /slave/slave-2.conf

  sentinel-1:
    network_mode: "service:master"
    image: redis:latest
    container_name: sentinel-1
    volumes:
      - ./sentinel:/sentinel
    command: redis-server /sentinel/sentinel-1.conf --sentinel
    depends_on:
      - master
  sentinel-2:
    network_mode: "service:master"
    image: redis:latest
    container_name: sentinel-2
    volumes:
      - ./sentinel:/sentinel
    command: redis-server /sentinel/sentinel-2.conf --sentinel
    depends_on:
      - master
  sentinel-3:
    network_mode: "service:master"
    image: redis:latest
    container_name: sentinel-3
    volumes:
      - ./sentinel:/sentinel
    command: redis-server /sentinel/sentinel-3.conf --sentinel
    depends_on:
      - master

  eureka:
    image: eclipse-temurin:21-jdk
    restart: unless-stopped
    ports:
      - "8761:8761"
    volumes:
      - ./coupon-api/build/libs/eureka-0.0.1-SNAPSHOT.jar:/app.jar
      - /opt/images
    command: [ "java", "-jar", "/app.jar" ]

  spring-app:
    image: eclipse-temurin:21-jdk
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - ./coupon-api/build/libs/coupon-api.jar:/app.jar
      - /opt/images
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://coupon-mysql:3306/coupon
      SPRING_DATASOURCE_USERNAME: abcd
      SPRING_DATASOURCE_PASSWORD: 1234
      SPRING_REDIS_HOST: coupon-redis
      SPRING_REDIS_PORT: 6380
      SERVER_PORT: 8080
      EUREKA_SERVER_URL: http://host.docker.internal:8761/eureka/
    command: [ "java", "-jar", "/app.jar" ]
    depends_on:
      - mysql
      - master

  spring-app-2:
    image: eclipse-temurin:21-jdk
    restart: unless-stopped
    ports:
      - "8084:8084"
    volumes:
      - ./coupon-api/build/libs/coupon-api.jar:/app.jar
      - /opt/images
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://coupon-mysql:3306/coupon
      SPRING_DATASOURCE_USERNAME: abcd
      SPRING_DATASOURCE_PASSWORD: 1234
      SPRING_REDIS_HOST: coupon-redis
      SPRING_REDIS_PORT: 6380
      SERVER_PORT: 8084
      EUREKA_SERVER_URL: http://host.docker.internal:8761/eureka/
    command: [ "java", "-jar", "/app.jar" ]
    depends_on:
      - mysql
      - master

  gateway:
    image: eclipse-temurin:21-jdk
    restart: unless-stopped
    ports:
      - "8081:8081"
    volumes:
      - ./coupon-api/build/libs/gateway-0.0.1-SNAPSHOT.jar:/app.jar
      - /opt/images
    environment:
      JWK_SET_URI: http://host.docker.internal:9010/oauth2/jwks
      EUREKA_SERVER_URL: http://host.docker.internal:8761/eureka/
    command: [ "java", "-jar", "/app.jar" ]

  mysql:
    container_name: coupon-mysql
    image: ubuntu/mysql:edge
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --explicit_defaults_for_timestamp=1
    ports:
      - 3308:3306
    environment:
      - MYSQL_DATABASE=coupon
      - MYSQL_USER=abcd
      - MYSQL_PASSWORD=1234
      - MYSQL_ROOT_PASSWORD=1234
      - TZ=UTC
    volumes:
      - mysql-data:/var/lib/mysql

  grafana:
    image: grafana/grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    logging:
      driver: "json-file"
      options:
        max-size: "8m"
        max-file: "10"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_PATHS_PLUGINS: "/var/lib/grafana-plugins"
      GF_INSTALL_PLUGINS: "grafana-clock-panel,grafana-simple-json-datasource"
      GF_LOG_MODE: "console file"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/plugins:/var/lib/grafana-plugins

  prometheus:
    image: prom/prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - spring-app